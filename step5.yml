- hosts: undercloud
  gather_facts: false
  become: true
  become_user: stack
  tasks:
    - name: read credentials
      tags: [credentials]
      shell: |
        . ~/{{ item }}

        cat <<EOF
        {
          "os_password": "$OS_PASSWORD",
          "os_username": "$OS_USERNAME",
          "os_region_name": "$OS_REGION_NAME",
          "os_auth_url": "$OS_AUTH_URL",
          "os_project_name": "$OS_PROJECT_NAME",
          "os_cloudname": "$OS_CLOUDNAME",
          "os_identity_api_version": "$OS_IDENTITY_API_VERSION"
        }
        EOF
      register: credentials
      loop:
        - stackrc
        - overcloudrc

    - name: create openstack config directory
      tags: [credentials]
      file:
        path: ~/.config/openstack
        state: directory

    - name: initialize clouds.yaml
      tags: [credentials]
      lineinfile:
        path: ~/.config/openstack/clouds.yaml
        create: true
        line: "clouds:"
        insertbefore: BOF

    - name: add undercloud and overcloud to clouds.yaml
      tags: [credentials]
      blockinfile:
        path: ~/.config/openstack/clouds.yaml
        mode: "0700"
        marker: "# {mark} CLOUD {{ creds.os_cloudname }}"
        block: |
          # Dummy line to make Ansible happy
            {{ creds.os_cloudname }}:
              auth:
                username: "{{ creds.os_username }}"
                project_name: "{{ creds.os_project_name }}"
                password: "{{ creds.os_password }}"
                auth_url: "{{ creds.os_auth_url }}"
                user_domain_name: Default
                project_domain_name: Default
              region: "{{ creds.os_region_name }}"
              identity_api_version: "{{ creds.os_identity_api_version }}"
              interface: internal
      vars:
        creds: "{{ item.stdout|from_json }}"
      loop: "{{ credentials.results }}"

    - name: get stack user home directory
      shell: "echo $HOME"
      register: stack_home
      changed_when: false

    - set_fact:
        stack_home: "{{ stack_home.stdout }}"

    - name: create flavors
      os_nova_flavor: "{{ item|combine({'cloud': 'overcloud'}) }}"
      loop: "{{ os_flavors }}"
      loop_control:
        label: "{{ item.name }}"

    - name: create image download directory
      file:
        path: "{{ stack_home }}/demo_images"
        state: directory

    - name: download images
      get_url:
        url: "{{ item.url }}"
        dest: "{{ stack_home }}/demo_images/{{ item.name }}.{{ item.format }}"
      loop: "{{ os_images }}"
      loop_control:
        label: "{{ item.name }}"

    - name: upload images to glance
      os_image:
        cloud: overcloud
        name: "{{ item.name }}"
        container_format: bare
        disk_format: "{{ item.format }}"
        filename: "{{ stack_home }}/demo_images/{{ item.name }}.{{ item.format }}"
        is_public: true
        properties: "{{ item.properties|default(omit) }}"
      loop: "{{ os_images }}"

    - name: create projects
      os_project:
        cloud: overcloud
        name: "{{ item }}"
        domain: default
      loop: "{{ os_projects }}"
      loop_control:
        label: "{{ item }}"

    - name: create users
      os_user: "{{ item|combine({'cloud': 'overcloud', 'domain': 'default'}) }}"
      loop: "{{ os_users }}"
      loop_control:
        label: "{{ item.name }}"

    - name: read overcloud auth url
      shell: |
        . ~/overcloudrc
        echo "$OS_AUTH_URL"
        echo "$OS_REGION_NAME"
        echo "$OS_IDENTITY_API_VERSION"
      register: auth_url

    - name: add users to clouds.yaml
      blockinfile:
        path: ~/.config/openstack/clouds.yaml
        mode: "0700"
        marker: "# {mark} USER {{ user.name }}"
        block: |
          # Dummy line to make ansible happy
            overcloud-{{ user.name }}:
              auth:
                username: "{{ user.name }}"
                project_name: "{{ user.default_project }}"
                password: "{{ user.password }}"
                auth_url: "{{ auth_url.stdout_lines[0] }}"
                user_domain_name: Default
                project_domain_name: Default
              region: "{{ auth_url.stdout_lines[1] }}"
              identity_api_version: "{{ auth_url.stdout_lines[2] }}"
              interface: internal
      loop: "{{ os_users }}"
      loop_control:
        loop_var: user

    - name: assign user roles
      os_user_role:
        cloud: overcloud
        user: "{{ item.name }}"
        project: "{{ item.default_project }}"
        role: member
      loop: "{{ os_users }}"
      loop_control:
        label: "{{ item.default_project }}:{{ item.name }}"

#   - name: create external network
#     os_network:
#       cloud: overcloud
#       name: external
#       external: true
#       provider_network_type: flat
#       provider_physical_network: datacentre
#
#   - name: create external network subnet
#     os_subnet:
#       cloud: overcloud
#       network_name: external
#       name: external-subnet
#       cidr: 10.0.0.0/24
#       enable_dhcp: false
